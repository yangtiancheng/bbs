<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>技术小哥</title>
  
  <subtitle>总结一尺，成长一寸</subtitle>
  <link href="/bbs.github.io/atom.xml" rel="self"/>
  
  <link href="https://yangtiancheng.github.io/bbs.github.io/"/>
  <updated>2019-04-06T01:18:49.249Z</updated>
  <id>https://yangtiancheng.github.io/bbs.github.io/</id>
  
  <author>
    <name>杨天成</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Odoo 浅谈Odoo提供的附件机制</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo-%E6%B5%85%E8%B0%88Odoo%E6%8F%90%E4%BE%9B%E7%9A%84%E9%99%84%E4%BB%B6%E6%9C%BA%E5%88%B6/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo-浅谈Odoo提供的附件机制/</id>
    <published>2019-04-06T09:13:38.000Z</published>
    <updated>2019-04-06T01:18:49.249Z</updated>
    
    <content type="html"><![CDATA[<p>Odoo提供的附件机制</p><p><img src="https://img-blog.csdn.net/20180326101437554?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NjU0MzI1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><a id="more"></a><p>存储位置可配置：<br>&emsp;&emsp;通过 设置-参数-系统参数 定义的关键字ir_attachment.location来控制附件的存储方式。<br><img src="https://img-blog.csdn.net/2018032610183484?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NjU0MzI1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><ul><li>1.如果未维护记录或者维护记录值不为db，默认存储路径为应用服务器上的/var/lib/odoo/filestore/数据库名称/文件夹,例如/var/lib/odoo/filestore/ 868/9c。</li></ul><ul><li>2.将文件的路径写入store_fname字段，file_size表示文件大小，db_datas表示文件以二进制的形式存储在数据库中(这里为空)。</li></ul><ul><li>3.如果维护记录值为db，则以binary的形式存储在数据库表db_datas中。</li></ul><h2 id="个人总结"><a href="#个人总结" class="headerlink" title="个人总结"></a>个人总结</h2><ol><li><p>可配置存储方式:<br>我们的所有附件数据可以选择保存在数据库db_datas中，还是应用服务器/var/lib/odoo/数据库名/sha1[:2]中。<br>如果保存在应用服务器中，系统的数据库会更加轻便，而且附件使用base64编码文件，通过sha1方式给每一个附件文件标定为唯一的记录datas_fname，如果上传相同的文件，数据库store_fname记录只需要放入文件的服务器软地址，不需要再将文件上传，加速了上传的效率。</p></li><li><p>同一记录单或不同记录单，相同的文件只会上传一次:<br>数据库记录只需要放入相关的访问地址，需要时直接读取，防止多余的空间流失。HRP现有的资质的附件上传方式，采用数据库直接存取二进制文件形式，上传文件就接收，不校验，不智能，数据冗余，使得数据库臃肿不堪。</p></li><li><p>权限检查-更安全：<br>对系统附件的每一种类型的操作，odoo源码附件机制都会检验权限是否满足，只有附件上传者、超级管理员、管理组用户才可以对相关附件进行高级操作，保证了操作附件的安全性。</p></li></ol><ol start="4"><li><p>不易丢失:<br>选择应用服务器保存附件，极端情况下，当数据库数据丢失或损坏时，存储在服务器端的附件不会受到波及，防止数据丢失。</p></li><li><p>异步备份：<br>虽然看起来既要备份数据库，又要备份应用服务器的附件部分，操作步骤变多了。但分步备份保证了数据库快速备份，服务器附件传输要求并不像数据库备份时，要求快速、轻便，所以这样的机制更适合</p></li></ol><p>###如有理解错误的地方，请大家指正.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Odoo提供的附件机制&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdn.net/20180326101437554?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NjU0MzI1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Odoo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>Odoo12-M2m字段添加一行弹出框内容个性化指定视图+action自定义指定视图</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo12-M2m%E5%AD%97%E6%AE%B5%E6%B7%BB%E5%8A%A0%E4%B8%80%E8%A1%8C%E5%BC%B9%E5%87%BA%E6%A1%86%E5%86%85%E5%AE%B9%E4%B8%AA%E6%80%A7%E5%8C%96%E6%8C%87%E5%AE%9A%E8%A7%86%E5%9B%BE-action%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E5%AE%9A%E8%A7%86%E5%9B%BE/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo12-M2m字段添加一行弹出框内容个性化指定视图-action自定义指定视图/</id>
    <published>2019-04-06T08:58:57.000Z</published>
    <updated>2019-04-06T00:59:32.050Z</updated>
    
    <content type="html"><![CDATA[<p>m2m字段的context属性接收一个 tree_view_ref 属性，通过它指定特定的打开视图即可。<br>举个例子：</p><h3 id="1-首先自定义一个打开字段模型的tree视图："><a href="#1-首先自定义一个打开字段模型的tree视图：" class="headerlink" title="1. 首先自定义一个打开字段模型的tree视图："></a>1. 首先自定义一个打开字段模型的tree视图：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Tree M2M Select View--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">record</span> <span class="attr">model</span>=<span class="string">"ir.ui.view"</span> <span class="attr">id</span>=<span class="string">"&#123;tree_id&#125;"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>Tree M2M Select View<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"model"</span>&gt;</span>&#123;model_name&#125;<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"priority"</span>  <span class="attr">eval</span>=<span class="string">"20"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"arch"</span> <span class="attr">type</span>=<span class="string">"xml"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">tree</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"active_flag"</span>/&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">tree</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">record</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：<br>&emsp;&emsp;最好指定一个priority属性值&gt;16，否则可能会将你原来model的tree视图也跳转到新写的tree上了(odoo8中会出现这个情况 默认值16 加载默认取最新的视图)；或者，你可以在action上指定一个view_ids,保证原生的视图一定连接到对应的类型视图：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"view_ids"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">eval</span>=<span class="string">"[(5, 0, 0),</span></span></span><br><span class="line"><span class="tag"><span class="string">                      (0, 0, &#123;'view_mode': 'tree', 'view_id': ref('&#123;module_name&#125;.&#123;tree_view_id&#125;')&#125;),</span></span></span><br><span class="line"><span class="tag"><span class="string">                      (0, 0, &#123;'view_mode': 'form', 'view_id': ref('&#123;module_name&#125;.&#123;form_view_id&#125;')&#125;)]"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="2-在对应的m2m字段上指定视图"><a href="#2-在对应的m2m字段上指定视图" class="headerlink" title="2. 在对应的m2m字段上指定视图"></a>2. 在对应的m2m字段上指定视图</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"element_ids"</span> <span class="attr">context</span>=<span class="string">"&#123;'tree_view_ref': '&#123;module_name&#125;.&#123;tree_id&#125;'&#125;"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>简单的总结，就到这里吧，大家如果有更好的方式请分享给我~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;m2m字段的context属性接收一个 tree_view_ref 属性，通过它指定特定的打开视图即可。&lt;br&gt;举个例子：&lt;/p&gt;
&lt;h3 id=&quot;1-首先自定义一个打开字段模型的tree视图：&quot;&gt;&lt;a href=&quot;#1-首先自定义一个打开字段模型的tree视图：&quot; cla
      
    
    </summary>
    
    
      <category term="Odoo-XML" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo-XML/"/>
    
  </entry>
  
  <entry>
    <title>Odoo12的数据库表约束变化时如何更新约束(_sql_constraints)</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo12%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E7%BA%A6%E6%9D%9F%E5%8F%98%E5%8C%96%E6%97%B6%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0%E7%BA%A6%E6%9D%9F-sql-constraints/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo12的数据库表约束变化时如何更新约束-sql-constraints/</id>
    <published>2019-04-06T08:52:39.000Z</published>
    <updated>2019-04-06T00:56:14.682Z</updated>
    
    <content type="html"><![CDATA[<p>两种方式：</p><h3 id="1-覆盖重写"><a href="#1-覆盖重写" class="headerlink" title="1. 覆盖重写"></a>1. 覆盖重写</h3><pre><code>举个🌰：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># odoo源码酱紫</span></span><br><span class="line">_sql_constraints = [</span><br><span class="line">       (<span class="string">'code_and_name'</span>,</span><br><span class="line">        <span class="string">'UNIQUE(code,name)'</span>,</span><br><span class="line">        _(<span class="string">"Code and Name must be unique!"</span>)),</span><br><span class="line">   ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 现在变成了 code + company 唯一约束</span></span><br><span class="line"><span class="comment"># 如果哦我们不介意unique的在数据库中的名称 我们可以酱紫写</span></span><br><span class="line">_sql_constraints = [</span><br><span class="line">       (<span class="string">'code_and_name'</span>,</span><br><span class="line">        <span class="string">'UNIQUE(code,company_id)'</span>,</span><br><span class="line">        _(<span class="string">"Code and Company must be unique!"</span>)),</span><br><span class="line">   ]</span><br><span class="line"><span class="comment"># 即名称相同，直接覆盖 可以取数据库中查看表的unique选项 </span></span><br><span class="line">![覆盖重写](https://img-blog.csdnimg.cn/<span class="number">20190311140149173.</span>png)</span><br></pre></td></tr></table></figure></code></pre><a id="more"></a>    <h3 id="2-查询删除并新增"><a href="#2-查询删除并新增" class="headerlink" title="2. 查询删除并新增"></a>2. 查询删除并新增</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># odoo源码酱紫(account.account)</span></span><br><span class="line">  _sql_constraints = [</span><br><span class="line">       (<span class="string">'code_company_uniq'</span>, </span><br><span class="line">       <span class="string">'unique (code,company_id)'</span>, </span><br><span class="line">       <span class="string">'The code of the account must be unique per company !'</span>)</span><br><span class="line">   ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询删除并新增酱紫</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> odoo <span class="keyword">import</span> _, api, fields, models, modules</span><br><span class="line"><span class="keyword">from</span> odoo.exceptions <span class="keyword">import</span> ValidationError</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">_logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcountAccountInherit</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    _inherit = <span class="string">'account.account'</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">@api.model_cr</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 删除Odoo源码 科目表的约束条件</span></span><br><span class="line">        cr = self.env.cr</span><br><span class="line">        unique_name = <span class="string">'account_account_code_company_uniq'</span></span><br><span class="line">        table_name = <span class="string">'account_account'</span></span><br><span class="line">        cr.execute(<span class="string">"""SELECT 1 from pg_constraint cs JOIN pg_class cl ON (cs.conrelid = cl.oid)</span></span><br><span class="line"><span class="string">                                           WHERE cs.conname=%s and cl.relname=%s"""</span>, (unique_name, table_name))</span><br><span class="line">        <span class="keyword">if</span> cr.fetchone():</span><br><span class="line">            cr.execute(<span class="string">'ALTER TABLE "%s" DROP CONSTRAINT "%s"'</span> % (table_name, unique_name), )</span><br><span class="line">            _logger.info(<span class="string">'Dropped CONSTRAINT %s@%s'</span>, table_name, unique_name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增新约束</span></span><br><span class="line">    _sql_constraints = [</span><br><span class="line">        (<span class="string">'code_and_account_structure'</span>,</span><br><span class="line">         <span class="string">'UNIQUE(code,account_structure_id)'</span>,</span><br><span class="line">         _(<span class="string">"Code and account structure must be unique!"</span>)),</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;两种方式：&lt;/p&gt;
&lt;h3 id=&quot;1-覆盖重写&quot;&gt;&lt;a href=&quot;#1-覆盖重写&quot; class=&quot;headerlink&quot; title=&quot;1. 覆盖重写&quot;&gt;&lt;/a&gt;1. 覆盖重写&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;举个🌰：
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# odoo源码酱紫&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_sql_constraints = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;string&quot;&gt;&#39;code_and_name&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;UNIQUE(code,name)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _(&lt;span class=&quot;string&quot;&gt;&quot;Code and Name must be unique!&quot;&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 现在变成了 code + company 唯一约束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 如果哦我们不介意unique的在数据库中的名称 我们可以酱紫写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_sql_constraints = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;string&quot;&gt;&#39;code_and_name&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;UNIQUE(code,company_id)&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _(&lt;span class=&quot;string&quot;&gt;&quot;Code and Company must be unique!&quot;&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 即名称相同，直接覆盖 可以取数据库中查看表的unique选项 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![覆盖重写](https://img-blog.csdnimg.cn/&lt;span class=&quot;number&quot;&gt;20190311140149173.&lt;/span&gt;png)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Odoo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>Odoo12个性化模块覆盖源码字段的翻译(i18n)</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo12%E4%B8%AA%E6%80%A7%E5%8C%96%E6%A8%A1%E5%9D%97%E8%A6%86%E7%9B%96%E6%BA%90%E7%A0%81%E5%AD%97%E6%AE%B5%E7%9A%84%E7%BF%BB%E8%AF%91-i18n/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo12个性化模块覆盖源码字段的翻译-i18n/</id>
    <published>2019-04-06T08:52:18.000Z</published>
    <updated>2019-04-06T00:56:14.679Z</updated>
    
    <content type="html"><![CDATA[<h1 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h1><p>当我们有一个字段<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 源码 analytic 模块</span></span><br><span class="line"><span class="string">"""py代码"""</span></span><br><span class="line">code = fields.Char(string=<span class="string">'Reference'</span>, index=<span class="literal">True</span>, track_visibility=<span class="string">'onchange'</span>)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;po代码&quot;&quot;&quot;</span><br><span class="line">#. module: analytic</span><br><span class="line">#: model:ir.model.fields,field_description:analytic.field_account_analytic_account__code</span><br><span class="line">msgid &quot;Reference&quot;</span><br><span class="line">msgstr &quot;参考&quot;</span><br></pre></td></tr></table></figure><a id="more"></a>    <p>现在我们需要将Reference翻译成 “编码参照”<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 个性化 new_module 模块</span></span><br><span class="line"><span class="string">"""py代码"""</span></span><br><span class="line"><span class="comment"># 继承_get_import_cursor方法 将继承模块的翻译替换 启用</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IrTranslation</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    _inherit = <span class="string">'ir.translation'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_import_cursor</span><span class="params">(self)</span>:</span></span><br><span class="line">        context = self._context.copy()</span><br><span class="line">        context[<span class="string">'overwrite'</span>] = <span class="literal">True</span></span><br><span class="line">        self = self.with_context(context)</span><br><span class="line">        <span class="keyword">return</span> super(IrTranslation, self)._get_import_cursor()</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;po代码 覆盖原翻译&quot;&quot;&quot;</span><br><span class="line">#. module: analytic</span><br><span class="line">#: model:ir.model.fields,field_description:analytic.field_account_analytic_account__code</span><br><span class="line">msgid &quot;Reference&quot;</span><br><span class="line">msgstr &quot;编码参照&quot;</span><br></pre></td></tr></table></figure><p>其实这个与我们config文件中的 –i18n-overwrite =&gt; config[‘overwrite_existing_translations’] 的配置内容相同。</p><p>这样处理后，我们需要升级我们的个性化模块 new_module ，升级完成后，翻译覆盖成功。<br>值得注意的是：1. 加载翻译不会生效 2. 升级模块后翻译覆盖成功，但是如果再次加载翻译，覆盖的翻译会被还原。</p><pre><code>讨论：如何将源码的翻译替换掉，并且还能拿持久化，如果有好的建议请您指点！</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h1&gt;&lt;p&gt;当我们有一个字段&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 源码 analytic 模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;py代码&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;code = fields.Char(string=&lt;span class=&quot;string&quot;&gt;&#39;Reference&#39;&lt;/span&gt;, index=&lt;span class=&quot;literal&quot;&gt;True&lt;/span&gt;, track_visibility=&lt;span class=&quot;string&quot;&gt;&#39;onchange&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;&amp;quot;&amp;quot;po代码&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#. module: analytic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#: model:ir.model.fields,field_description:analytic.field_account_analytic_account__code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msgid &amp;quot;Reference&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msgstr &amp;quot;参考&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Odoo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>odoo action页面跳转直接为编辑状态操作</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/odoo-action%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E7%9B%B4%E6%8E%A5%E4%B8%BA%E7%BC%96%E8%BE%91%E7%8A%B6%E6%80%81%E6%93%8D%E4%BD%9C/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/odoo-action页面跳转直接为编辑状态操作/</id>
    <published>2019-04-06T08:40:12.000Z</published>
    <updated>2019-04-06T00:49:48.655Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">return &#123;</span><br><span class="line">        &apos;type&apos;: &apos;ir.actions.act_window&apos;,</span><br><span class="line">        &apos;view_type&apos;: &apos;form&apos;,</span><br><span class="line">        &apos;view_mode&apos;: &apos;form&apos;,</span><br><span class="line">        &apos;res_model&apos;: &apos;；module.model_name&apos;,</span><br><span class="line">        &apos;res_id&apos;: self.id,</span><br><span class="line">        &apos;context&apos;: self.env.context,</span><br><span class="line">        &apos;flags&apos;: &#123;&apos;initial_mode&apos;: &apos;edit&apos;&#125;,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>加上这句：‘flags’: {‘initial_mode’: ‘edit’},<br><a id="more"></a></p><p>Odoo12使用：<br>context[‘form_view_initial_mode’] = ‘edit’</p><p><a href="https://www.cnblogs.com/hellojesson/p/8405539.html" target="_blank" rel="noopener">特别感谢技术提供来源URL</a></p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;type&amp;apos;: &amp;apos;ir.actions.act_window&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;view_type&amp;apos;: &amp;apos;form&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;view_mode&amp;apos;: &amp;apos;form&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;res_model&amp;apos;: &amp;apos;；module.model_name&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;res_id&amp;apos;: self.id,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;context&amp;apos;: self.env.context,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;apos;flags&amp;apos;: &amp;#123;&amp;apos;initial_mode&amp;apos;: &amp;apos;edit&amp;apos;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;加上这句：‘flags’: {‘initial_mode’: ‘edit’},&lt;br&gt;
    
    </summary>
    
    
      <category term="Odoo-XML" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo-XML/"/>
    
  </entry>
  
  <entry>
    <title>hexo的坑汇总</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/hexo%E7%9A%84%E5%9D%91%E6%B1%87%E6%80%BB/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/hexo的坑汇总/</id>
    <published>2019-04-06T00:55:28.000Z</published>
    <updated>2019-04-05T17:03:45.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="删除hexo工程"><a href="#删除hexo工程" class="headerlink" title="删除hexo工程"></a>删除hexo工程</h2><p>手动rm -rf hexo工程 后，发现了一个问题，虽然绑定了github page,但是hexo工程的源码并没有了，<br>目前是没发现什么恢复的方式。</p><p>推荐大家使用pycharm编写，就算rm -rf 删除了工程，我们可以mkdir 同名hexo<br>工程文件，然后右击文件上选择Local History,找到一个历史点，选择Revert，这时候工程就恢复到了历史点。<br><a id="more"></a></p><h2 id="推荐使用方式"><a href="#推荐使用方式" class="headerlink" title="推荐使用方式"></a>推荐使用方式</h2><ol><li>使用pycharm编辑</li><li>使用git仓库管理，定时上传hexo工程代码</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;删除hexo工程&quot;&gt;&lt;a href=&quot;#删除hexo工程&quot; class=&quot;headerlink&quot; title=&quot;删除hexo工程&quot;&gt;&lt;/a&gt;删除hexo工程&lt;/h2&gt;&lt;p&gt;手动rm -rf hexo工程 后，发现了一个问题，虽然绑定了github page,但是hexo工程的源码并没有了，&lt;br&gt;目前是没发现什么恢复的方式。&lt;/p&gt;
&lt;p&gt;推荐大家使用pycharm编写，就算rm -rf 删除了工程，我们可以mkdir 同名hexo&lt;br&gt;工程文件，然后右击文件上选择Local History,找到一个历史点，选择Revert，这时候工程就恢复到了历史点。&lt;br&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>npm切换国内源</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/npm%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/npm切换国内源/</id>
    <published>2019-04-05T22:17:35.000Z</published>
    <updated>2019-04-05T14:47:39.565Z</updated>
    
    <content type="html"><![CDATA[<h1 id="切换国内源"><a href="#切换国内源" class="headerlink" title="切换国内源"></a>切换国内源</h1><p>npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p><p>cnpm install hexo-cli -g<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;切换国内源&quot;&gt;&lt;a href=&quot;#切换国内源&quot; class=&quot;headerlink&quot; title=&quot;切换国内源&quot;&gt;&lt;/a&gt;切换国内源&lt;/h1&gt;&lt;p&gt;npm install -g cnpm –registry=&lt;a href=&quot;https://registry.npm.taobao.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;cnpm install hexo-cli -g&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/linux/"/>
    
      <category term="npm" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>PEP8必须学习</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/PEP8%E5%BF%85%E9%A1%BB%E5%AD%A6%E4%B9%A0/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/PEP8必须学习/</id>
    <published>2019-04-05T22:06:31.000Z</published>
    <updated>2019-04-05T14:47:39.563Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/ratsniper/article/details/78954852#introduction-%E4%BB%8B%E7%BB%8D" target="_blank" rel="noopener">URL-Chinese</a><br><a href="https://www.python.org/dev/peps/pep-0008/#introduction" target="_blank" rel="noopener">URL-English</a></p><h1 id="这些开发规范还是很重要的，必读"><a href="#这些开发规范还是很重要的，必读" class="headerlink" title="这些开发规范还是很重要的，必读"></a>这些开发规范还是很重要的，必读</h1><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/ratsniper/article/details/78954852#introduction-%E4%BB%8B%E7%BB%8D&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;URL-Chinese&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/#introduction&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;URL-English&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;这些开发规范还是很重要的，必读&quot;&gt;&lt;a href=&quot;#这些开发规范还是很重要的，必读&quot; class=&quot;headerlink&quot; title=&quot;这些开发规范还是很重要的，必读&quot;&gt;&lt;/a&gt;这些开发规范还是很重要的，必读&lt;/h1&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Postgresql10持续学习(ing)</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Postgresql10%E6%8C%81%E7%BB%AD%E5%AD%A6%E4%B9%A0-ing/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Postgresql10持续学习-ing/</id>
    <published>2019-04-05T22:05:50.000Z</published>
    <updated>2019-04-05T14:45:32.260Z</updated>
    
    <content type="html"><![CDATA[<h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><ul><li>视图是为了避免每次查询都要敲打sql而出现的替代物，它就像一张表，可以存储多个变之间的结构和数据关系。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 学生选课查询</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> myView <span class="keyword">AS</span></span><br><span class="line">    <span class="keyword">select</span> p.name,p.age,c.name</span><br><span class="line">        <span class="keyword">from</span> people p,course c</span><br><span class="line">        <span class="keyword">where</span> p.id = c.p_id</span><br></pre></td></tr></table></figure></li></ul><p>以后我想查询数据，我只需要select * from myView;就能实现我的整个查询。<br><a id="more"></a></p><h1 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h1><ul><li>可以约束表的插入数据的完整性</li></ul><h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><ul><li>事务最重要的一点是它将多个步骤捆绑成了一个单一的、要么全完成要么全不完成的操作</li><li>一个事务被数据库系统完成并认可，它就被永久地记录下来且即便其后发生崩溃也不会被丢失</li><li>当多个事务并发运行时，每一个都不能看到其他事务未完成的修改</li><li>一组被BEGIN和COMMIT包围的语句也被称为一个事务块</li></ul><h2 id="保存回滚点"><a href="#保存回滚点" class="headerlink" title="保存回滚点"></a>保存回滚点</h2><ul><li>回滚点前的数据依旧存在 回滚点到rollback区间的操作不记录<br>savepoint 回滚点名称<br>rollback to 回滚点名称<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> accounts <span class="keyword">SET</span> balance = balance - <span class="number">100.00</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">'Alice'</span>;</span><br><span class="line"><span class="keyword">SAVEPOINT</span> my_savepoint;</span><br><span class="line"><span class="keyword">UPDATE</span> accounts <span class="keyword">SET</span> balance = balance + <span class="number">100.00</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">'Bob'</span>;</span><br><span class="line"><span class="comment">-- oops ... forget that and use Wally's account</span></span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> my_savepoint;</span><br><span class="line"><span class="keyword">UPDATE</span> accounts <span class="keyword">SET</span> balance = balance + <span class="number">100.00</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">name</span> = <span class="string">'Wally'</span>;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="窗口函数"><a href="#窗口函数" class="headerlink" title="窗口函数"></a>窗口函数</h1><ul><li>窗口函数主要是用聚集函数的，但是需要部分聚集，相同聚集字段记录放一起进行聚集计算<br>OVER (ORDER BY 字段名 ORDER BY 字段名) 是窗口函数的定义<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> salary, <span class="keyword">sum</span>(salary) <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> salary) <span class="keyword">FROM</span> empsalary;</span><br></pre></td></tr></table></figure></li></ul><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> cities (</span><br><span class="line"><span class="keyword">name</span>       <span class="built_in">text</span>,</span><br><span class="line">population <span class="built_in">real</span>,</span><br><span class="line">altitude   <span class="built_in">int</span>     <span class="comment">-- (in ft)</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> capitals (</span><br><span class="line">state      <span class="built_in">char</span>(<span class="number">2</span>)</span><br><span class="line">) INHERITS (cities);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span>, altitude</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">ONLY</span> cities</span><br><span class="line"><span class="keyword">WHERE</span> altitude &gt; <span class="number">500</span>;</span><br></pre></td></tr></table></figure><ul><li>ONLY用于指示查询只在cities表上进行而不会涉及到继承层次中位于cities之下的其他表</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;视图&quot;&gt;&lt;a href=&quot;#视图&quot; class=&quot;headerlink&quot; title=&quot;视图&quot;&gt;&lt;/a&gt;视图&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;视图是为了避免每次查询都要敲打sql而出现的替代物，它就像一张表，可以存储多个变之间的结构和数据关系。&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- 学生选课查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;view&lt;/span&gt; myView &lt;span class=&quot;keyword&quot;&gt;AS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; p.name,p.age,c.name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; people p,course c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; p.id = c.p_id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以后我想查询数据，我只需要select * from myView;就能实现我的整个查询。&lt;br&gt;
    
    </summary>
    
    
      <category term="Postgresql" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Postgresql/"/>
    
  </entry>
  
  <entry>
    <title>Odoo12-启动持续分析(ing)</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo12-%E5%90%AF%E5%8A%A8%E6%8C%81%E7%BB%AD%E5%88%86%E6%9E%90-ing/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo12-启动持续分析-ing/</id>
    <published>2019-04-05T22:04:49.000Z</published>
    <updated>2019-04-05T17:08:20.636Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sys-argv"><a href="#sys-argv" class="headerlink" title="sys.argv:"></a>sys.argv:</h2><p>第一个参数是执行的文件全路径，后面的参数是执行文件时的参数</p><p><hr><br><a id="more"></a></p><h2 id="OptionContainer"><a href="#OptionContainer" class="headerlink" title="OptionContainer"></a>OptionContainer</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">抽象类</span><br><span class="line"></span><br><span class="line">类属性：</span><br><span class="line">    standard_option_list - 一个列表，用于列出公共的选项，一般在继承的子类中实现</span><br><span class="line">    </span><br><span class="line">实例属性：</span><br><span class="line">    option_list： 选项对象列表</span><br><span class="line">    _short_opt：&#123;string:Opthon&#125; 简写</span><br><span class="line">    _long_opt：&#123;string:Opthon&#125; 全称</span><br><span class="line">    defaults：&#123;string:any&#125; 其他默认指令映射</span><br><span class="line">方法：</span><br><span class="line">    __init__:</span><br><span class="line">        self._create_option_list()</span><br><span class="line">        self.option_class = option_class# 选项类</span><br><span class="line">        self.set_conflict_handler(conflict_handler)# 冲突类</span><br><span class="line">        self.set_description(description) # 描述</span><br><span class="line">    _create_option_mappings:</span><br><span class="line">        # 初始化三个实例属性</span><br><span class="line">        self._short_opt = &#123;&#125;            # single letter -&gt; Option instance</span><br><span class="line">        self._long_opt = &#123;&#125;             # long option -&gt; Option instance</span><br><span class="line">        self.defaults = &#123;&#125;              # maps option dest -&gt; default value</span><br><span class="line">    _share_option_mappings：</span><br><span class="line">        # 设置三个实例属性</span><br><span class="line">       </span><br><span class="line">    set_conflict_handler：</span><br><span class="line">        # 设置冲突处理 </span><br><span class="line">        参数：</span><br><span class="line">            handler - error/resolve </span><br><span class="line">        conflict_handler = handler</span><br><span class="line">        </span><br><span class="line">    set_description：</span><br><span class="line">        # 设置描述</span><br><span class="line">    </span><br><span class="line">    get_description：</span><br><span class="line">        # 获取描述</span><br><span class="line">    </span><br><span class="line">    def destroy(self):</span><br><span class="line">        # 三个实例参数销毁</span><br><span class="line">        &quot;&quot;&quot;see OptionParser.destroy().&quot;&quot;&quot;</span><br><span class="line">        del self._short_opt</span><br><span class="line">        del self._long_opt</span><br><span class="line">        del self.defaults</span><br><span class="line">        </span><br><span class="line">    _check_conflict：</span><br><span class="line">        验证当前选项是否已经存在</span><br><span class="line">        </span><br><span class="line">    add_option：</span><br><span class="line">        单个选项添加</span><br><span class="line">    </span><br><span class="line">    add_options：</span><br><span class="line">        参数： option_list</span><br><span class="line">        批量选项添加</span><br></pre></td></tr></table></figure><hr>    <h2 id="OptionParser"><a href="#OptionParser" class="headerlink" title="OptionParser"></a>OptionParser</h2><p>odoo.tools.config.parse_config(args)是什么作用？</p><hr><h2 id="odoo-bin"><a href="#odoo-bin" class="headerlink" title="odoo-bin"></a>odoo-bin</h2><ol><li>import odoo 包引入，参数初始化</li><li>odoo.cli.main()启动服务</li></ol><hr><h2 id="command-py"><a href="#command-py" class="headerlink" title="command.py"></a>command.py</h2><ol><li>args - 拿到对应的启动参数</li><li>commands - 可调用函数集合</li><li>o - 实例化Server类</li><li>o.run(args) - 启动服务 cli/server.py/main(args)</li></ol><hr><h2 id="cli-server-py-只提及主要部分"><a href="#cli-server-py-只提及主要部分" class="headerlink" title="cli/server.py(只提及主要部分)"></a>cli/server.py(只提及主要部分)</h2><ol><li>check_root_user() 检查当前操作机器用户不能为root 限制权限</li><li>odoo.tools.config.parse_config(args)# 加载–config文件内容到全局变量 或者创建一个./config文件</li><li>check_postgres_user()#post的用户不能是postgres</li><li>report_configuration()# 打印配置信息</li><li>config 就是当前加载过config文件 系统的配置参数实例</li><li>config - pidfile文件存在的话，如果args参数第二个为evented，打开文件存储主线程相关</li><li>odoo.service.server.start启动wsgi</li><li>load_server_wide_modules 加载服务器预支模块base、web</li><li>initialize_sys_path()初始化配置的系统路径addons_path 挂载钩子 sys.meta_path 和 hooked=True</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;sys-argv&quot;&gt;&lt;a href=&quot;#sys-argv&quot; class=&quot;headerlink&quot; title=&quot;sys.argv:&quot;&gt;&lt;/a&gt;sys.argv:&lt;/h2&gt;&lt;p&gt;第一个参数是执行的文件全路径，后面的参数是执行文件时的参数&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Odoo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>Python统计文件行数</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Python%E7%BB%9F%E8%AE%A1%E6%96%87%E4%BB%B6%E8%A1%8C%E6%95%B0/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Python统计文件行数/</id>
    <published>2019-04-05T22:02:47.000Z</published>
    <updated>2019-04-05T14:53:25.448Z</updated>
    
    <content type="html"><![CDATA[<h4 id="basedirs-‘-Users-tc-code-odoo8-hrp’"><a href="#basedirs-‘-Users-tc-code-odoo8-hrp’" class="headerlink" title="basedirs = [‘/Users/tc/code/odoo8/hrp’]"></a>basedirs = [‘/Users/tc/code/odoo8/hrp’]</h4><p>filelists = []</p><h4 id="指定想要统计的文件类型"><a href="#指定想要统计的文件类型" class="headerlink" title="指定想要统计的文件类型"></a>指定想要统计的文件类型</h4><p>whitelist = [‘xml’, ‘py’, ‘js’, ‘css’]<br><a id="more"></a></p><h4 id="遍历文件-递归遍历文件夹中的所有"><a href="#遍历文件-递归遍历文件夹中的所有" class="headerlink" title="遍历文件, 递归遍历文件夹中的所有"></a>遍历文件, 递归遍历文件夹中的所有</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getFile</span><span class="params">(basedir)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> filelists</span><br><span class="line">    local_filelists = []</span><br><span class="line">    <span class="keyword">for</span> parent,dirnames,filenames <span class="keyword">in</span> os.walk(basedir):</span><br><span class="line">        <span class="comment">#for dirname in dirnames:</span></span><br><span class="line">        <span class="comment">#    getFile(os.path.join(parent,dirname)) #递归</span></span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">            ext = filename.split(<span class="string">'.'</span>)[<span class="number">-1</span>]</span><br><span class="line">            <span class="comment">#只统计指定的文件类型，略过一些log和cache文件</span></span><br><span class="line">            <span class="keyword">if</span> ext <span class="keyword">in</span> whitelist:</span><br><span class="line">                local_filelists.append(os.path.join(parent,filename))</span><br><span class="line">                filelists.append(os.path.join(parent,filename))</span><br><span class="line">    <span class="keyword">return</span> local_filelists</span><br></pre></td></tr></table></figure><h4 id="统计一个文件的行数"><a href="#统计一个文件的行数" class="headerlink" title="统计一个文件的行数"></a>统计一个文件的行数</h4><p>def countLine(fname):<br>    count = 0<br>    for file_line in open(fname).xreadlines():<br>        if file_line != ‘’ and file_line != ‘\n’: #过滤掉空行<br>            count += 1<br>    return count<br>if <strong>name</strong> == ‘<strong>main</strong>‘ :<br>    startTime = time.clock()<br>    all_line = 0<br>    for basedir in basedirs:<br>        local_filelists = getFile(basedir)<br>        totalline = 0<br>        for filelist in local_filelists:<br>            totalline = totalline + countLine(filelist)<br>        all_line += totalline<br>        print str(basedir.split(“/“)[-1])+’,’,totalline<br>    print ‘ =&gt; ALL LINES:’+str(all_line)</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;basedirs-‘-Users-tc-code-odoo8-hrp’&quot;&gt;&lt;a href=&quot;#basedirs-‘-Users-tc-code-odoo8-hrp’&quot; class=&quot;headerlink&quot; title=&quot;basedirs = [‘/Users/tc/code/odoo8/hrp’]&quot;&gt;&lt;/a&gt;basedirs = [‘/Users/tc/code/odoo8/hrp’]&lt;/h4&gt;&lt;p&gt;filelists = []&lt;/p&gt;
&lt;h4 id=&quot;指定想要统计的文件类型&quot;&gt;&lt;a href=&quot;#指定想要统计的文件类型&quot; class=&quot;headerlink&quot; title=&quot;指定想要统计的文件类型&quot;&gt;&lt;/a&gt;指定想要统计的文件类型&lt;/h4&gt;&lt;p&gt;whitelist = [‘xml’, ‘py’, ‘js’, ‘css’]&lt;br&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Odoo-Xmlrpc</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo-Xmlrpc/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo-Xmlrpc/</id>
    <published>2019-04-05T22:00:48.000Z</published>
    <updated>2019-04-05T14:47:39.555Z</updated>
    
    <content type="html"><![CDATA[<h1 id="XMLRPC"><a href="#XMLRPC" class="headerlink" title="XMLRPC"></a>XMLRPC</h1><ol><li>看例子<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">外部调用</span><br><span class="line">url:http://localhost:8069/xmlrpc/2/object</span><br><span class="line">method:post</span><br><span class="line">application/xml</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--XML请求报文结构--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">methodCall</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- used to call methods of odoo models --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">methodName</span>&gt;</span>execute<span class="tag">&lt;/<span class="name">methodName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">params</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--数据库名称--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span><span class="tag">&lt;<span class="name">string</span>&gt;</span>zocx919<span class="tag">&lt;/<span class="name">string</span>&gt;</span><span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--登录用户ID--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span><span class="tag">&lt;<span class="name">int</span>&gt;</span>用户ID<span class="tag">&lt;/<span class="name">int</span>&gt;</span><span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--用户登录密码--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>zochrp<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--调用方法存在的模型--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>account.asset.asset<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--调用方法的名称--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">string</span>&gt;</span>get_datas<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">&lt;!--传入方法的参数--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">struct</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">member</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Key 不用写string 否则报错--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>name<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">            <span class="comment">&lt;!--Value--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span><span class="tag">&lt;<span class="name">string</span>&gt;</span>LiMing<span class="tag">&lt;/<span class="name">string</span>&gt;</span><span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">member</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">struct</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span><span class="tag">&lt;<span class="name">int</span>&gt;</span>1<span class="tag">&lt;/<span class="name">int</span>&gt;</span><span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">params</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">methodCall</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 响应方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HrpZocAccountAssetAsset</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    _inherit = <span class="string">"account.asset.asset"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @api.model</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_datas</span><span class="params">(self, vals)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'ok............'</span></span><br><span class="line">        <span class="keyword">return</span> vals</span><br><span class="line">        <span class="comment"># 返回值 要拼接成 字典 类型， xmlrpc自动解析返回xml格式响应报文</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>分析<br>1、调用的数据中记得必须使用的是object<br>2、XML请求报文中 array标签类似于python中的列表，struct标签类似于python中的字典，struct结构中只能出现格式:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">member</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">member</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、python代码中需要定义特定的接收方法，并且返回一个数据字典</p></li><li><p>其他<br>暂无</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;XMLRPC&quot;&gt;&lt;a href=&quot;#XMLRPC&quot; class=&quot;headerlink&quot; title=&quot;XMLRPC&quot;&gt;&lt;/a&gt;XMLRPC&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;看例子&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;外部调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url:http://localhost:8069/xmlrpc/2/object&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;method:post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;application/xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Odoo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>Odoo-Jsonrpc</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo-Jsonrpc/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo-Jsonrpc/</id>
    <published>2019-04-05T22:00:03.000Z</published>
    <updated>2019-04-05T14:47:39.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JSONRPC"><a href="#JSONRPC" class="headerlink" title="JSONRPC"></a>JSONRPC</h1><ol><li>看例子<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">外部调用</span><br><span class="line">url:http://localhost:8069/jsonrpc</span><br><span class="line">method:post</span><br><span class="line">application/json</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"jsonrpc"</span>: <span class="string">"2.0"</span>,</span><br><span class="line">    <span class="attr">"method"</span>: <span class="string">"call"</span>,</span><br><span class="line">    <span class="attr">"params"</span>: &#123;</span><br><span class="line">        <span class="attr">"service"</span>: <span class="string">"object"</span>,</span><br><span class="line">        <span class="attr">"method"</span>: <span class="string">"execute"</span>,</span><br><span class="line">        <span class="attr">"args"</span>: [<span class="string">"数据库名称"</span>, 登录用户ID, <span class="string">"登录用户密码"</span>, <span class="string">"模型"</span>, <span class="string">"方法"</span>,</span><br><span class="line">            [</span><br><span class="line">              '参数及合'</span><br><span class="line">            ]</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 响应方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HrpZocAccountAssetAsset</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    _inherit = <span class="string">"account.asset.asset"</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @api.model</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_datas</span><span class="params">(self, vals)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'ok............'</span></span><br><span class="line">        <span class="keyword">return</span> vals</span><br><span class="line">        <span class="comment"># 返回值 要拼接成 字典 类型响应报文</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JSONRPC&quot;&gt;&lt;a href=&quot;#JSONRPC&quot; class=&quot;headerlink&quot; title=&quot;JSONRPC&quot;&gt;&lt;/a&gt;JSONRPC&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;看例子&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;外部调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;url:http://localhost:8069/jsonrpc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;method:post&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;application/json&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Odoo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>Odoo-QWeb</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo-QWeb/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo-QWeb/</id>
    <published>2019-04-05T21:57:58.000Z</published>
    <updated>2019-04-05T14:54:08.699Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Base"><a href="#Base" class="headerlink" title="Base"></a>Base</h1><hr><h2 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h2><ul><li>/static/src/xml/*.xml 定义模板。</li><li><strong>openerp</strong>.py的qweb中注册*.xml文件</li></ul><hr><h2 id="JS加载模板-两种"><a href="#JS加载模板-两种" class="headerlink" title="JS加载模板(两种)"></a>JS加载模板(两种)</h2><ul><li>QWeb.render(模板名称)</li><li>template: “模板名称”<a id="more"></a></li></ul><hr><h2 id="JS调用模板传参-两种"><a href="#JS调用模板传参-两种" class="headerlink" title="JS调用模板传参(两种)"></a>JS调用模板传参(两种)</h2><ul><li>QWeb.render(模板名称,参数字典)<ul><li>template接收显示\<t t-esc="参数名称"></t></li></ul></li><li><p>template: “模板名称”</p><ul><li>通过init方法初始化参数,通过this传递(注意parent参数和继承_super方法必须使用)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">init: <span class="function"><span class="keyword">function</span>(<span class="params">parent</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>._super(parent);</span><br><span class="line">        <span class="keyword">this</span>.name = <span class="string">"Mordecai"</span>;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></li></ul><ul><li>template接收显示\<t t-esc="widget.参数名称"></t></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Base&quot;&gt;&lt;a href=&quot;#Base&quot; class=&quot;headerlink&quot; title=&quot;Base&quot;&gt;&lt;/a&gt;Base&lt;/h1&gt;&lt;hr&gt;

&lt;h2 id=&quot;Template&quot;&gt;&lt;a href=&quot;#Template&quot; class=&quot;headerlink&quot; title=&quot;Template&quot;&gt;&lt;/a&gt;Template&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;/static/src/xml/*.xml 定义模板。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;openerp&lt;/strong&gt;.py的qweb中注册*.xml文件&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;h2 id=&quot;JS加载模板-两种&quot;&gt;&lt;a href=&quot;#JS加载模板-两种&quot; class=&quot;headerlink&quot; title=&quot;JS加载模板(两种)&quot;&gt;&lt;/a&gt;JS加载模板(两种)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;QWeb.render(模板名称)&lt;/li&gt;
&lt;li&gt;template: “模板名称”
    
    </summary>
    
    
      <category term="Odoo-Qweb" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo-Qweb/"/>
    
  </entry>
  
  <entry>
    <title>Odoo-报表</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo-%E6%8A%A5%E8%A1%A8/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo-报表/</id>
    <published>2019-04-05T21:48:41.000Z</published>
    <updated>2019-04-05T14:47:39.581Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pdf报表"><a href="#pdf报表" class="headerlink" title="pdf报表"></a>pdf报表</h1><h2 id="PDF报表结构"><a href="#PDF报表结构" class="headerlink" title="PDF报表结构"></a>PDF报表结构</h2><ul><li>一个XML数据配置文件</li><li>一个py文件</li></ul><p>Odoo原生的报表通过HTML或者QWeb定义，可以通过Qweb控制流工具，使用wkhtmltopdf来注册pdf。<br>定义一个报表的主要需要定义1.报表 2.报表模板 3.可以个性化格式 4.可以客户化class来为报表的数据服务<br><a id="more"></a></p><h2 id="Report"><a href="#Report" class="headerlink" title="Report"></a>Report</h2><ol><li>报表都需要定义一个 report_action：<br> 可以通过一个<report>标签来定义 report_action.格式定义：<br> id - 是report_action的外部ID(ir_model_data可查)<br> name(必输) - 数据库中的report_name 用于对应报表模板的外部ID<br> file - 数据库中的report_file 与name相同<br> string - PDF报表名称 action的下拉名称<br> model(必输) - 报表放那个model的界面上<br> report_type(必输) - 报表类型 目前我们认为它只有两种打印PDF的qweb-pdf、和打印HTML的qweb-html.<br> report_name - 报表名称 输出报表的名字<br> groups - 组权限控制 哪个对应的用户组能够触发报表操作<br> attachment_use - bool(true/false) 如果设置成True则会将打印的报表以附件attachment的形式存储在系统的附件系统中，用于一次使用，需要测试。<br> attachment - python逻辑赋值表达式，用来定义附件存储的文件名称 可使用一定的逻辑判断赋值。<br> paperformat - 默认定义为公司下的纸张格式 如果有特殊需要可以自定义纸张格式。</report></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">report</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">"account_invoices"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">model</span>=<span class="string">"account.invoice"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">string</span>=<span class="string">"Invoices"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">report_type</span>=<span class="string">"qweb-pdf"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">name</span>=<span class="string">"account.report_invoice"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">file</span>=<span class="string">"account.report_invoice"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">attachment_use</span>=<span class="string">"True"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">attachment</span>=<span class="string">"(object.state in ('open','paid')) and</span></span></span><br><span class="line"><span class="tag"><span class="string">        ('INV'+(object.number or '').replace('/','')+'.pdf')"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Report-Template"><a href="#Report-Template" class="headerlink" title="Report Template"></a>Report Template</h2><ol><li><p>报表模板中call外部布局样式，它将添加默认的报表头和报表尾。PDF报表体江北包含在<div class="page">标签中，template的外部id必须符合报表定义规则，从Qweb模板中，能够通过docs访问对象包含的所有字段。</div></p></li><li><p>报表中有一些特定的变量:<br> docs - 当前报表的记录集合(数据)<br> doc_ids - 当前报表的记录集合的ids列表<br> doc_model - docs包含的数据记录来源model<br> time - 从python标准库中引用的time对象<br> user - 打印报表的用户<br> res_company - 当前打印报表用户对应公司<br> 如果需要访问其他模型的记录集，可以关注后续的客户话报表。</p></li><li><p>Translatable Templates(可翻译的模板)<br>如果需要根据业务伙伴的语言来打印对应语言格式的报表，需要定义两个模板。</p></li></ol><ul><li>主报表模板</li><li>可翻译的文件</li></ul><p>可以在主报表模板中加入t-lang属性设置语言来直接调用翻译文件，如果需要对使用的字段等进行翻译，可以对字段附属的对象传入相应的context参数，使对象变的可翻译。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果没有想要翻译，最好不写，因为写入会重读记录，影响打印效率</span><br></pre></td></tr></table></figure></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Main template --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"report_saleorder"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">t</span> <span class="attr">t-call</span>=<span class="string">"web.html_container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">t</span> <span class="attr">t-foreach</span>=<span class="string">"docs"</span> <span class="attr">t-as</span>=<span class="string">"doc"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">t</span> <span class="attr">t-call</span>=<span class="string">"sale.report_saleorder_document"</span> <span class="attr">t-lang</span>=<span class="string">"doc.partner_id.lang"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">t</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">t</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Translatable template --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"report_saleorder_document"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Re-browse of the record with the partner lang --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">t</span> <span class="attr">t-set</span>=<span class="string">"doc"</span> <span class="attr">t-value</span>=<span class="string">"doc.with_context(&#123;'lang':doc.partner_id.lang&#125;)"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">t</span> <span class="attr">t-call</span>=<span class="string">"web.external_layout"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"oe_structure"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">strong</span> <span class="attr">t-if</span>=<span class="string">"doc.partner_shipping_id == doc.partner_invoice_id"</span>&gt;</span>Invoice and shipping address:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">strong</span> <span class="attr">t-if</span>=<span class="string">"doc.partner_shipping_id != doc.partner_invoice_id"</span>&gt;</span>Invoice address:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">t-field</span>=<span class="string">"doc.partner_invoice_id"</span> <span class="attr">t-options</span>=<span class="string">"&#123;&amp;quot;no_marker&amp;quot;: True&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">...</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"oe_structure"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">t</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>解释一下:主报表模板调用附加context属性t-lang为doc.partner_id.lang 的翻译模板，这样就会被对应的语言渲染。这样的话，报表就会打印成对应业务伙伴语言的报表。如果只需要转换报表体内容而不动报表头/尾部分，可以：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">t</span> <span class="attr">t-call</span>=<span class="string">"web.external_layout"</span> <span class="attr">t-lang</span>=<span class="string">"en_US"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="Barcodes-条形码"><a href="#Barcodes-条形码" class="headerlink" title="Barcodes(条形码)"></a>Barcodes(条形码)</h2><p>可以很方便的借助Qweb的语法将条形码嵌入到模板中<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">t-att-src</span>=<span class="string">"'/report/barcode/QR/%s' % 'My text in qr code'"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>可以传递一些参数：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">t-att-src</span>=<span class="string">"'/report/barcode/?</span></span></span><br><span class="line"><span class="tag"><span class="string">    type=%s&amp;value=%s&amp;width=%s&amp;height=%s'%('QR', 'text', 200, 200)"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="Useful-Remarks-有效的语法"><a href="#Useful-Remarks-有效的语法" class="headerlink" title="Useful Remarks(有效的语法)"></a>Useful Remarks(有效的语法)</h2><ol><li>Report Template可以使用Twitter Bootstrap 和 FontAwesome类来渲染。</li><li>本地CSS可以在Template中使用。</li><li>可以通过继承主报表样式来插入到我们的css中。</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"report_saleorder_style"</span> <span class="attr">inherit_id</span>=<span class="string">"report.style"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">xpath</span> <span class="attr">expr</span>=<span class="string">"."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">t</span>&gt;</span></span><br><span class="line">      .example-css-class &#123;</span><br><span class="line">        background-color: red;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">t</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">xpath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Paper-Format-纸张格式"><a href="#Paper-Format-纸张格式" class="headerlink" title="Paper Format(纸张格式)"></a>Paper Format(纸张格式)</h2><p>报表格式是report.paperformat对象的记录，它们经常包括如下几个参数:<br>    name(必输) - 可标识样板格式的简要名称<br>    description - 对样板简短的介绍<br>    format - 预定义格式A0-A9 B0-B9 Legal Letter Tabloid… 默认是A4，如果定义了这个参数将无法使用个性化的格式。<br>    dpi - 输出的DPI 默认为90<br>    margin_top, margin_bottom, margin_left, margin_right - 边距大小默认单位mm<br>    page_height , page_width - 页面尺寸 默认单位mm<br>    orientation - Landscape 或者 Portrait<br>    header_line - 布尔值 是否显示头行<br>    header_spacing - 头空间 默认单位mm</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">record</span> <span class="attr">id</span>=<span class="string">"paperformat_frenchcheck"</span> <span class="attr">model</span>=<span class="string">"report.paperformat"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>French Bank Check<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">eval</span>=<span class="string">"True"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"format"</span>&gt;</span>custom<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"page_height"</span>&gt;</span>80<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"page_width"</span>&gt;</span>175<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"orientation"</span>&gt;</span>Portrait<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"margin_top"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"margin_bottom"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"margin_left"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"margin_right"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"header_line"</span> <span class="attr">eval</span>=<span class="string">"False"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"header_spacing"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"dpi"</span>&gt;</span>80<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">record</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="客户化报表"><a href="#客户化报表" class="headerlink" title="客户化报表"></a>客户化报表</h2><p>报表model有一个get_html方法，就是通过report.{module.report_name}来寻找客户化报表model，如果找到的话，将使用找到的这个类来调用Qweb引擎,否则就调用默认方法。如果希望客户化一个包含了各种项的报表模板，就可以定义这个model，重写render_html方法，并且在docargs列表中传递数据。</p><h2 id="报表都可以在web页面上显示"><a href="#报表都可以在web页面上显示" class="headerlink" title="报表都可以在web页面上显示"></a>报表都可以在web页面上显示</h2><p>可以通过例如:<br>http://<server-address>/report/html/sale.report_saleorder/38<br>http://<server-address>/report/pdf/sale.report_saleorder/38<br>如上方式访问html/pdf的报表</server-address></server-address></p><h2 id="Odoo11-PDF报表实例流程"><a href="#Odoo11-PDF报表实例流程" class="headerlink" title="Odoo11 PDF报表实例流程"></a>Odoo11 PDF报表实例流程</h2><h3 id="1-创建一个ir-actions-report对象"><a href="#1-创建一个ir-actions-report对象" class="headerlink" title="1.创建一个ir.actions.report对象"></a>1.创建一个ir.actions.report对象</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">report</span></span></span><br><span class="line"><span class="tag">    <span class="attr">string</span>=<span class="string">"界面打印下拉框处显示的文字"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">"ir_model_data表中创建的数据记录name 其实就是外部id①"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">model</span>=<span class="string">"报表绑定的model 在哪个界面上显示"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">report_type</span>=<span class="string">"报表类别/qweb-pdf"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">name</span>=<span class="string">"hrp_asset.report_asset_transfer_application"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">file</span>=<span class="string">"hrp_asset.report_asset_transfer_application"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XML文件中"><a href="#XML文件中" class="headerlink" title="XML文件中"></a>XML文件中</h3><ol><li><p>首先介绍一下XML文件中的基础格式:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">openerp</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">openerp</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>初始化一个report数据项:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">report</span></span></span><br><span class="line"><span class="tag">    <span class="attr">string</span>=<span class="string">"界面打印下拉框处显示的文字"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">"ir_model_data表中创建的数据记录name 其实就是外部id①"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">model</span>=<span class="string">"报表绑定的model 在哪个界面上显示"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">report_type</span>=<span class="string">"报表类别/qweb-pdf"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">name</span>=<span class="string">"hrp_asset.report_asset_transfer_application"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">file</span>=<span class="string">"hrp_asset.report_asset_transfer_application"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>对report项绑定一个数据模板，paperformat_id来自于report.paperformat:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">record</span> <span class="attr">id</span>=<span class="string">"ir_model_data表中创建的数据记录name 其实就是外部id①"</span> <span class="attr">model</span>=<span class="string">"ir.actions.report.xml"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"paperformat_id"</span> <span class="attr">ref</span>=<span class="string">"hrp_base.paperformat_horizontal_A4"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">record</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>注:这里的paperformat可以自行定义样式</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;pdf报表&quot;&gt;&lt;a href=&quot;#pdf报表&quot; class=&quot;headerlink&quot; title=&quot;pdf报表&quot;&gt;&lt;/a&gt;pdf报表&lt;/h1&gt;&lt;h2 id=&quot;PDF报表结构&quot;&gt;&lt;a href=&quot;#PDF报表结构&quot; class=&quot;headerlink&quot; title=&quot;PDF报表结构&quot;&gt;&lt;/a&gt;PDF报表结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一个XML数据配置文件&lt;/li&gt;
&lt;li&gt;一个py文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Odoo原生的报表通过HTML或者QWeb定义，可以通过Qweb控制流工具，使用wkhtmltopdf来注册pdf。&lt;br&gt;定义一个报表的主要需要定义1.报表 2.报表模板 3.可以个性化格式 4.可以客户化class来为报表的数据服务&lt;br&gt;
    
    </summary>
    
    
      <category term="Odoo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>Odoo-Excel下载</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Excel%E4%B8%8B%E8%BD%BD/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Excel下载/</id>
    <published>2019-04-05T21:47:42.000Z</published>
    <updated>2019-04-05T14:45:14.551Z</updated>
    
    <content type="html"><![CDATA[<h1 id="excel下载"><a href="#excel下载" class="headerlink" title="excel下载"></a>excel下载</h1><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p>class inherit_report_xls(report_xls)<sup>①</sup><br><br>class inherit_rml_parse(report_sxw.rml_parse)<sup>②</sup></p><ol><li><p>第一个python类class继承report_xls,用于控制界面样式调整，主要是重写继承类report_xls中的generate_xls_report方法。<br><br>继承report_xls类的class初始化。</p></li><li><p>第二个python类class用于基础数据获取与传递功能。<br><br>就是文中的</p><p style="color:red;">_p</p><p></p><a id="more"></a></li><li><p>一个odoo类class用于使用odoo的ORM或方法定义获取对应的数据集合。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">另外:大多数报表都有相应的弹出界面选择功能，对应的可以使用这个class去定义一些弹出框的选择字段，用作筛选条件。</span><br><span class="line">总之，这个class就是用于各种数据逻辑处理的模型。</span><br></pre></td></tr></table></figure></li><li><p>实例化第一个report_xls类，用于注册使用。<br><br>inherit_report_xls(‘report.report_name’<sup>③</sup>,’报表定义的model’<sup>④</sup>,’inherit_rml_parse’<sup>⑤</sup>)</p></li><li><p>一个XML,用于定义form弹窗相关的Acion、Form、Report与模型进行绑定</p></li><li><p>流程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">实现流程：</span><br><span class="line"></span><br><span class="line">    创建report_xls的继承类和report_sxw.rml_parse的继承类。</span><br><span class="line">    </span><br><span class="line">    实例化report_xls继承类</span><br><span class="line">    </span><br><span class="line">    创建odoo的class定义字段、写各种方法(例如获取数据下载报表方法print_report，打开报表选择页面的action方法等)。</span><br><span class="line">    </span><br><span class="line">    创建XML来个性化弹出框与选择条件，定义一个print_report按钮，定义一个连接数据对象。</span><br><span class="line">   </span><br><span class="line">操作流程:</span><br><span class="line">    点击报表菜单 - 弹出一个form界面(可能有参数选择) - 完成后点击打印按钮(print_report) - 报表打印</span><br></pre></td></tr></table></figure></li></ol><p><br>另外:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">return &#123;</span><br><span class="line">    &apos;type&apos;: &apos;ir.actions.report.xml&apos;,</span><br><span class="line">    &apos;report_name&apos;: &apos;nov.account.journal.xls&apos;,</span><br><span class="line">    &apos;datas&apos;: datas,</span><br><span class="line">    &apos;context&apos;:self.env.context&#125;</span><br></pre></td></tr></table></figure></p><p>直接return调用report_name的报表，有时候回使用一下context传点个性化的参数。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">record</span> <span class="attr">id</span>=<span class="string">"action_import_move_line_details_xls"</span> <span class="attr">model</span>=<span class="string">"ir.actions.report.xml"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>Import Move Line Details<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"model"</span>&gt;</span>hrp.account.gl.account.move<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"type"</span>&gt;</span>ir.actions.report.xml<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"report_name"</span>&gt;</span>import.move.line.details.xls<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"report_type"</span>&gt;</span>xls<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"auto"</span> <span class="attr">eval</span>=<span class="string">"False"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">record</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重要的是model，report_name,report_type：<br>    model目前我是默认写的objects挂载的模型，和注册中的model名称相同。(后续了解ir.act.report.xml看看model是用来干啥的)<br>    report_name:python代码中return调用的xls，其实就是ir.act.report.xml的唯一属性。<br>    report_type:是报表支持的类型，qweb-pdf、qweb-html、pdf、xls、xlsx等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&apos;name&apos;: &#123;</span><br><span class="line">    &apos;header&apos;: [1, 25, &apos;text&apos;, _render(&quot;_(&apos;Name&apos;)&quot;)],</span><br><span class="line">    &apos;lines&apos;: [1, 0, &apos;text&apos;, _render(&quot;line[&apos;name&apos;] or &apos;&apos;&quot;)],</span><br><span class="line">    &apos;totals&apos;: [1, 0, &apos;text&apos;, None]&#125;,</span><br></pre></td></tr></table></figure><p>’text’那个位置是用来判断初始化的 ‘’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import_move_line_details_xls(&apos;report.import.move.line.details.xls&apos;,</span><br><span class="line">                             &apos;hrp.account.gl.account.move&apos;,</span><br><span class="line">                             parser=import_move_line_details_xls_parser)</span><br></pre></td></tr></table></figure><p>格式：report_xls继承类(‘xls名称’,’objects挂载模型’,’parser对象’)<br>objects挂载模型的意思是，我们excel的数据取值是通过对应的记录来取值的，这里必须选择取数逻辑的model.<br><img src="./src/img/register.jpg" alt="img"><br><img src="./src/img/objects.png" alt="img"><br>我们可以发现它直接定位到了我们打印的单据数据，当然这是在form上或者通过form的一个按钮打开一个Transation的model来打印报表的，如果是那种<br>放在’更多’中的批量数据打印，我们还需要相应的做一些context的处理。</p><p><sup>逐步理解中…</sup></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;excel下载&quot;&gt;&lt;a href=&quot;#excel下载&quot; class=&quot;headerlink&quot; title=&quot;excel下载&quot;&gt;&lt;/a&gt;excel下载&lt;/h1&gt;&lt;h3 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot; title=&quot;结构&quot;&gt;&lt;/a&gt;结构&lt;/h3&gt;&lt;p&gt;class inherit_report_xls(report_xls)&lt;sup&gt;①&lt;/sup&gt;&lt;br&gt;&lt;br&gt;class inherit_rml_parse(report_sxw.rml_parse)&lt;sup&gt;②&lt;/sup&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;第一个python类class继承report_xls,用于控制界面样式调整，主要是重写继承类report_xls中的generate_xls_report方法。&lt;br&gt;&lt;br&gt;继承report_xls类的class初始化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二个python类class用于基础数据获取与传递功能。&lt;br&gt;&lt;br&gt;就是文中的&lt;/p&gt;&lt;p style=&quot;color:red;&quot;&gt;_p&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Odoo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>Odoo8-JS小记</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo8-JS%E5%B0%8F%E8%AE%B0/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo8-JS小记/</id>
    <published>2019-04-05T21:46:34.000Z</published>
    <updated>2019-04-05T14:47:39.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JS-基础"><a href="#JS-基础" class="headerlink" title="JS - 基础"></a>JS - 基础</h1><h2 id="入门理解"><a href="#入门理解" class="headerlink" title="入门理解"></a>入门理解</h2><ol><li>定义ir.action.client 带tag 与绑定的菜单对象<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">openerp</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">record</span> <span class="attr">id</span>=<span class="string">"widget_menu_action"</span> <span class="attr">model</span>=<span class="string">"ir.actions.client"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>Widget Menu Action<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"tag"</span>&gt;</span>tps_widget.widget_menu<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">record</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">menuitem</span> <span class="attr">id</span>=<span class="string">"tps_widget_top_menu"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">name</span>=<span class="string">"Widget Top Menu"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">sequence</span>=<span class="string">"10"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">menuitem</span> <span class="attr">id</span>=<span class="string">"tps_widget_sub_menu"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">name</span>=<span class="string">"Widget Sub Menu"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">parent</span>=<span class="string">"tps_widget_top_menu"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">sequence</span>=<span class="string">"10"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">menuitem</span> <span class="attr">id</span>=<span class="string">"tps_widget_func_menu"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">name</span>=<span class="string">"Widget Func Menu"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">parent</span>=<span class="string">"tps_widget_sub_menu"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">action</span>=<span class="string">"widget_menu_action"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">sequence</span>=<span class="string">"10"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">openerp</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol start="2"><li><p>定义一个js文件 - extend_widget.js 包含content：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">openerp.tps_widget = <span class="function"><span class="keyword">function</span> (<span class="params">instance, local</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _t = instance.web._t,</span><br><span class="line">        _lt = instance.web._lt;</span><br><span class="line">    <span class="keyword">var</span> QWeb = instance.web.qweb;</span><br><span class="line"></span><br><span class="line">    local.MyWidget = instance.Widget.extend(&#123;</span><br><span class="line">        start: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"load Mywidget."</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//第一个参数是tag 第二个参数是widget的完整地址</span></span><br><span class="line">    instance.web.client_actions.add(<span class="string">'tps_widget.widget_menu'</span>, <span class="string">'instance.MyWidget'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>引入js文件，定义一个xml<br>views/xxx_template.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">openerp</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"assets_backend"</span> <span class="attr">name</span>=<span class="string">"tps_widget"</span> <span class="attr">inherit_id</span>=<span class="string">"web.assets_backend"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xpath</span> <span class="attr">expr</span>=<span class="string">"."</span> <span class="attr">position</span>=<span class="string">"inside"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/tps_widget/static/js/extend_widget.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">xpath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">openerp</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>注意这里暂时没有py文件，但是xml文件需要在<strong>openerp</strong>.py中注册[定义菜单的xml 和 引入js的xml]。</p></li></ol><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><blockquote><p>this</p></blockquote><blockquote><p>this.$el</p></blockquote><blockquote><p>ob.appendTo(this.$el)</p></blockquote><blockquote><p>this.getParent().$el</p></blockquote><blockquote><p>this.getChildren()[0].$el</p></blockquote><h1 id="JS-挂件"><a href="#JS-挂件" class="headerlink" title="JS - 挂件"></a>JS - 挂件</h1><h2 id="o2m-unique"><a href="#o2m-unique" class="headerlink" title="o2m_unique"></a>o2m_unique</h2><p>o2m中的主数据字段，每张单据只能选一次，唯一性处理。</p><h2 id="many2many-tag"><a href="#many2many-tag" class="headerlink" title="many2many_tag"></a>many2many_tag</h2><p>m2m单据数据排列组合不可重复</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JS-基础&quot;&gt;&lt;a href=&quot;#JS-基础&quot; class=&quot;headerlink&quot; title=&quot;JS - 基础&quot;&gt;&lt;/a&gt;JS - 基础&lt;/h1&gt;&lt;h2 id=&quot;入门理解&quot;&gt;&lt;a href=&quot;#入门理解&quot; class=&quot;headerlink&quot; title=&quot;入门理解&quot;&gt;&lt;/a&gt;入门理解&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;定义ir.action.client 带tag 与绑定的菜单对象&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;openerp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;record&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;widget_menu_action&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;model&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ir.actions.client&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Widget Menu Action&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;field&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tag&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;tps_widget.widget_menu&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;field&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;record&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;menuitem&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tps_widget_top_menu&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Widget Top Menu&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;sequence&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;10&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;menuitem&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tps_widget_sub_menu&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Widget Sub Menu&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;parent&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tps_widget_top_menu&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;sequence&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;10&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;menuitem&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tps_widget_func_menu&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Widget Func Menu&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;parent&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tps_widget_sub_menu&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;action&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;widget_menu_action&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;                  &lt;span class=&quot;attr&quot;&gt;sequence&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;10&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;openerp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Odoo-JS" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo-JS/"/>
    
  </entry>
  
  <entry>
    <title>git基本操作指令笔记</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E6%8C%87%E4%BB%A4%E7%AC%94%E8%AE%B0/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/git基本操作指令笔记/</id>
    <published>2019-04-05T21:44:51.000Z</published>
    <updated>2019-04-05T14:47:39.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p>git clone url</p><p>git checkout -b T1</p><p>git checkout T1<br><a id="more"></a><br>git checkout .</p><p>git branch </p><p>git branch -D T1</p><p>git branch -m T1</p><p>git status</p><p>git diff</p><p>git add .</p><p>git commit [-m ‘message’]</p><p>git push origin T1</p><p>git fetch origin T1:T1</p><p>git merge –no-ff master-branch</p><p>git reset –mixed HEAD^</p><p>git commit –amend 可以对上一次的提交做修改</p><p>git clean -df</p><h2 id="代码冲突解决流程"><a href="#代码冲突解决流程" class="headerlink" title="代码冲突解决流程"></a>代码冲突解决流程</h2><ol><li>git checkout test</li><li>git pull origin test</li><li>git checkout 任务分支</li><li>git checkout -b 任务分支-1</li><li>git merge –no-ff test</li><li>代码中解决冲突</li><li>git add .</li><li>git commit</li><li>git push origin 任务分支-1</li><li>gitlab上合并 任务分支-1 到 test</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h1&gt;&lt;h2 id=&quot;基本命令&quot;&gt;&lt;a href=&quot;#基本命令&quot; class=&quot;headerlink&quot; title=&quot;基本命令&quot;&gt;&lt;/a&gt;基本命令&lt;/h2&gt;&lt;p&gt;git clone url&lt;/p&gt;
&lt;p&gt;git checkout -b T1&lt;/p&gt;
&lt;p&gt;git checkout T1&lt;br&gt;
    
    </summary>
    
    
      <category term="Git" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Odoo-翻译</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo-%E7%BF%BB%E8%AF%91/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo-翻译/</id>
    <published>2019-04-05T21:43:56.000Z</published>
    <updated>2019-04-05T14:56:00.689Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ir-translation简章"><a href="#ir-translation简章" class="headerlink" title="ir_translation简章"></a>ir_translation简章</h1><p>[字段]<br>lang<br>src<br>name<br>res_id<br>module<br>state<br>comments<br>value<br>type<br><a id="more"></a></p><hr><h2 id="几种翻译的加载方式"><a href="#几种翻译的加载方式" class="headerlink" title="几种翻译的加载方式"></a>几种翻译的加载方式</h2><p>普通按钮翻译</p><blockquote><p>直接加载翻译</p></blockquote><p>注:(XML上的按钮翻译旧源不认识下划线_)<br><img src="./imgs/trans02.jpg" alt="修改xml"><br><img src="./imgs/trans01.jpg" alt="效果"></p><hr><h2 id="报表翻译"><a href="#报表翻译" class="headerlink" title="报表翻译"></a>报表翻译</h2><p>report:report_name:0 直接加载翻译</p><hr><h2 id="菜单翻译"><a href="#菜单翻译" class="headerlink" title="菜单翻译"></a>菜单翻译</h2><p>重启 - 升级 - 加载翻译</p><hr><h2 id="字段翻译"><a href="#字段翻译" class="headerlink" title="字段翻译"></a>字段翻译</h2><p>直接加载翻译</p><hr><h2 id="code翻译"><a href="#code翻译" class="headerlink" title="code翻译"></a>code翻译</h2><p>直接加载翻译</p><hr><h2 id="module信息翻译"><a href="#module信息翻译" class="headerlink" title="module信息翻译"></a>module信息翻译</h2><p>手动删除所有翻译，重新加载翻译</p><h2 id="重写源码的字段翻译"><a href="#重写源码的字段翻译" class="headerlink" title="重写源码的字段翻译"></a>重写源码的字段翻译</h2><p>直接在继承的小模块i18n中重写 module:写原来的或但钱模块的都可以 最后在数据库中会被转换成小模块的 例如:hrp_account<br>翻译的显示值使用的是id最大的那一个匹配值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#. module: account</span><br><span class="line">#: selection:account.invoice,state:0</span><br><span class="line">msgid &quot;Open&quot;</span><br><span class="line">msgstr &quot;已审批&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ir-translation简章&quot;&gt;&lt;a href=&quot;#ir-translation简章&quot; class=&quot;headerlink&quot; title=&quot;ir_translation简章&quot;&gt;&lt;/a&gt;ir_translation简章&lt;/h1&gt;&lt;p&gt;[字段]&lt;br&gt;lang&lt;br&gt;src&lt;br&gt;name&lt;br&gt;res_id&lt;br&gt;module&lt;br&gt;state&lt;br&gt;comments&lt;br&gt;value&lt;br&gt;type&lt;br&gt;
    
    </summary>
    
    
      <category term="Odoo" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>Odoo-XML</title>
    <link href="https://yangtiancheng.github.io/bbs.github.io/Odoo-XML/"/>
    <id>https://yangtiancheng.github.io/bbs.github.io/Odoo-XML/</id>
    <published>2019-04-05T21:37:51.000Z</published>
    <updated>2019-04-05T14:47:39.561Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xml"><a href="#xml" class="headerlink" title="xml"></a>xml</h1><h2 id="data文件初始化中的知识点"><a href="#data文件初始化中的知识点" class="headerlink" title="data文件初始化中的知识点"></a>data文件初始化中的知识点</h2><h3 id="1-结构"><a href="#1-结构" class="headerlink" title="1.结构"></a>1.结构</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">openerp</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">record</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filed</span>&gt;</span><span class="tag">&lt;/<span class="name">filed</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">record</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">data</span>&gt;</span>...<span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">openerp</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性篇"><a href="#属性篇" class="headerlink" title="属性篇"></a>属性篇</h2><h3 id="attrs-公共属性"><a href="#attrs-公共属性" class="headerlink" title="attrs(公共属性)"></a>attrs(公共属性)</h3><a id="more"></a><blockquote><p>invisible<br>:影藏组件。</p></blockquote><blockquote><p>required<br>:组件必须有值。</p></blockquote><blockquote><p>readonly<br>:组件只读不可编辑(onchange过来的值不会被保存，需要在create/write方法中加入到vals中，或者开发个性化readonly存储挂件，例如:readonly_by_pass)。</p></blockquote><p style="color:red"><br>如果后面的条件是类似domain形式的，那么[(A,’OP’,B)]中，A是一个可选的字段，但是这个字段不能像py中的domain，它不能使用A.b这样的字段引用关系。<br>所以如果我们需要把这样的A.b字段在我们的模型中定义一个related字段，并把它放在xml中，这就是我们所谓的</p><b>辅助字段</b>。<br><br>&gt; noupdate - forcecreate<br>    noupdate - 属于data的标签属性<br>    forcecreate - 属于record的标签属性<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">作用：</span><br><span class="line">    noupdate主要用于data块里的record记录初始化，这些记录都会有一个ExtendID，也就是record上所谓的id,在ir_module_data上唯一。</span><br><span class="line">    noupdate的主要功能是初始化一遍数据，如果之后对XML数据定义修改了，再升级，这些数值是不会变化的，依旧保持第一次上来的样子。</span><br><span class="line">    但是如果你在界面删除了初始化的数据，那么下次升级模块，这些数据就会以修改后的XML数据为基础创建。</span><br><span class="line">    </span><br><span class="line">    如果只想数据第一次初始化进来，以后不改变，并且就算被删掉后，希望升级后也不要出现，那么就给对应的record记录上，</span><br><span class="line">    写forcecreate=&apos;false&apos;,这样就能保证模块安装初始化上来的数据，不会被任何情况修改更新，删除后不再创建。</span><br><span class="line">    </span><br><span class="line">    forcecreate必须绑定在noupdate中才生效,noupdate保持已有数据不更新，forcecreate保证数据删除，升级不创建。</span><br></pre></td></tr></table></figure><br><br><p style="color:red">如果删除了noupdate块中data文件初始化的数据记录，然后你重新更新它不重置，你可以看一下ir_module_data表，<br>对应的data块外部id记录中，noupdate=True,把那条记录删除再升级就出来了。</p><h3 id="options-m2o关系字段属性"><a href="#options-m2o关系字段属性" class="headerlink" title="options(m2o关系字段属性)"></a>options(m2o关系字段属性)</h3><blockquote><p>no_create_edit<br>:关系字段不允许在当前界面创建这个字段对应的模型记录。</p></blockquote><blockquote><p>no_create<br>:不允许直接在当前界面创建字段对应的模型记录(从代码中看no_create_edit和no_create逻辑一样)。</p></blockquote><blockquote><p>no_open<br>:不允许打开关系字段后面对应的单据。</p></blockquote><h5 style="color:red;">注意：最好用no_open:True/False，不要过度使用no_open:’0’/‘1’,经过测试[‘0’ == ‘1’ == True]</h5><h3 id="options-o2m关系字段属性"><a href="#options-o2m关系字段属性" class="headerlink" title="options(o2m关系字段属性)"></a>options(o2m关系字段属性)</h3><blockquote><p>no_edit_no_open<br>:关系字段不允许在当前界打开对应记录的form界面。</p></blockquote><h3 id="批量添加"><a href="#批量添加" class="headerlink" title="批量添加"></a>批量添加</h3><blockquote><p>1.batch_add(新开发js挂件非原生)</p></blockquote><pre><code>直接在o2m的XML字段属性上挂载batch_add=&quot;true&quot;即可。</code></pre><blockquote><p>2.ids_select</p></blockquote><pre><code>这个比较复杂:1.首先在py文件的头行结构中，定义一个头字段ids_select,字段属性定义如下:ids_select = fields.Char(string=&apos;ids&apos;, help=&apos;This id is to get ids of multiple select of one2many&apos;)2.然后再XML的头部放入ids_select字段，可影藏，字段定义如下:&lt;field name=&quot;ids_select&quot; class=&quot;oe_o2mx&quot; invisible=&quot;1&quot; on_change=&quot;updateLines(ids_select,o2m_filed,context)&quot;/&gt;3.绑定对应的o2m字段，将挂件 widget=&quot;o2mx&quot; 加到XML字段属性定义中。对应需o2m_filed的tree上要批量添加的主体字段(m2o_field)挂载 multiple_selection=&quot;true&quot; 属性。4.对ids_select定义on_change的方法updateLines进行逻辑处理:- 通用结构:    if not ids_select: return 0    selected_ids = ids_select.split(&apos;,&apos;)    if len(o2m_filed) == 1:        change_line = False        o2m_filed = self.o2m_filed.browse(o2m_filed[0][2])    else:        change_line = True        o2m_filed = map(lambda x: x[2], filter(lambda x: x[2], o2m_filed))    res = []    old_value = []    add_ids = []    line_number = 0    for line in o2m_filed:        line_number += 1        m2o_field = change_line and line[&apos;m2o_field&apos;] or line.m2o_field.id        old_value.append({            &apos;line_number&apos;:line_number,            &apos;m2o_field&apos;: m2o_field,            &apos;field1&apos;: field1,            &apos;field2&apos;: field2,            &apos;field3&apos;: field3,            ...        })        add_ids.append(m2o_field)    for id in selected_ids:        line = self.env[&apos;selected_ids_model&apos;].browse(int(id))        if int(id) not in add_ids:            line_number += 1            res.append({                &apos;line_number&apos;: line_number,                &apos;m2o_field&apos;: line.m2o_field.id or False,                &apos;field1&apos;: line.field1,                &apos;field2&apos;: line.field2,                &apos;field3&apos;: line.field3,                ...            })    if res:        return {&apos;value&apos;: {&apos;invoice_detail_ids&apos;: old_value + res}}-</code></pre><h3 id="普通"><a href="#普通" class="headerlink" title="普通"></a>普通</h3><blockquote><p>自动递增 递增间隔 最开始的值</p></blockquote><field name="line_number" required="1" options="{'line_number':1,'interval':10,'initial':10}"><h3 id="Domain"><a href="#Domain" class="headerlink" title="Domain"></a>Domain</h3><ul><li>XML定义的domain会覆盖字段定义的domain</li></ul><h3 id="ir-actions-act-window"><a href="#ir-actions-act-window" class="headerlink" title="ir.actions.act_window"></a>ir.actions.act_window</h3><p>[参数]</p><p>src_model：</p><blockquote><p>来源模型<br><br>这个动作应该放在哪个可见的对象可选模型名称(绑定到哪个模型上显示)</p></blockquote><p>res_model：</p><blockquote><p>目标模型<br><br>在视图窗口中打开的对象的模型名称(打开的wizard模型)</p></blockquote><p>context:</p><blockquote><p>search_default_字段名称:</p></blockquote><blockquote><p>display_filter:<br><br>在wizard的action上定义如: context=”{‘display_filter’:’invoice_form_view’}”<br><br>在对应的绑定模型中的context中写入如：context=”{‘invoice_form_view’:1’}”<br><br>对应绑定的action在限制了view_id,那么这个wizard就唯一绑定在了这个对应的视图上,同模型的其他视图上不显示(一模型多菜单多视图模式)。</p></blockquote><blockquote><p>execute_method:<br><br>在wizard的action上定义如: context=”{‘execute_method’:’invoice_execute_method’}”<br><br>触发action时会直接执行invoice_execute_method方法，但是执行了这个方法就不会直接跳转视图了，你需要在执行的方法中return跳转视图的action。</p></blockquote><blockquote><p>‘clear_breadcrumbs’<br>  ‘clear_breadcrumbs’:True可以在视图上隐藏列标题。</p></blockquote><p>res_model:</p><blockquote><p>目标模型<br></p></blockquote><p>src_model:</p><blockquote><p>原始模型<br></p></blockquote><p>views:</p><blockquote><p>定义视图类别引用ref</p></blockquote><p>view_id:</p><blockquote><p>定义默认打开视图引用ref</p></blockquote><h3 id="ir-actions-act-window-view"><a href="#ir-actions-act-window-view" class="headerlink" title="ir.actions.act_window.view"></a>ir.actions.act_window.view</h3><blockquote><p>此模型实际是view_ids的绑定模型,可以通过初始化act_window的view_ids挂在属性值,来控制多个菜单公用一个model,但是打开的是对应的tree、form、<br>search等模型。<br><!--举个例子 action固定绑定视图引用对象--></p></blockquote><p>1.定义一个action<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">record</span> <span class="attr">model</span>=<span class="string">"ir.actions.act_window"</span> <span class="attr">id</span>=<span class="string">"hrp_payment_preparation_action"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span>Payment Preparation<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"res_model"</span>&gt;</span>hrp.payment.request<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"view_type"</span>&gt;</span>form<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"view_mode"</span>&gt;</span>tree,form<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"search_view_id"</span> <span class="attr">ref</span>=<span class="string">"hrp_payment_preparation_search"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"domain"</span>&gt;</span>[('state','in',['approved','paying','paid'])]<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"context"</span>&gt;</span>&#123;'readonly_by_pass':['company_id','total_amount','invoice_detail_ids','supplier_id','supplier_category_id',</span><br><span class="line">        'invoice_date','date_due','payment_method_id','original_amount','open_amount']&#125;<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">record</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>2.在action上绑定对应类型的视图外部引用对象<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--供应商预付款申请界面tree视图指定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">record</span> <span class="attr">id</span>=<span class="string">"hrp_payment_preparation_tree_view"</span> <span class="attr">model</span>=<span class="string">"ir.actions.act_window.view"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">eval</span>=<span class="string">"1"</span> <span class="attr">name</span>=<span class="string">"sequence"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"view_mode"</span>&gt;</span>tree<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"view_id"</span> <span class="attr">ref</span>=<span class="string">"hrp_payment_preparation_tree"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"act_window_id"</span> <span class="attr">ref</span>=<span class="string">"hrp_payment_preparation_action"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">record</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--供应商预付款申请界面form视图指定--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">record</span> <span class="attr">id</span>=<span class="string">"hrp_payment_preparation_form_view"</span> <span class="attr">model</span>=<span class="string">"ir.actions.act_window.view"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">eval</span>=<span class="string">"2"</span> <span class="attr">name</span>=<span class="string">"sequence"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"view_mode"</span>&gt;</span>form<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"view_id"</span> <span class="attr">ref</span>=<span class="string">"hrp_payment_preparation_form"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"act_window_id"</span> <span class="attr">ref</span>=<span class="string">"hrp_payment_preparation_action"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">record</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.这时候就算一个model上有多个tree视图、多个form视图,甚至是多个search视图等,只要绑定好就会直接打开对应的视图界面,不会打开错咯.</p><p>4.如果出现记录单据被通过M2O字段链接的形式跳转过去，那么很可能出现错误，因为点击事件调用了get_formview_action方法，默认获取对应类型视图的view界面，<br>为了在这种情况下不出现错误，我们必须重写get_formview_action方法，提供正确的return导向，也许这里是用的odoo7的写法，在新写法中，我们通过封装@api.v7装饰器，<br>来重载方法，达到我们的目的。</p></field>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;xml&quot;&gt;&lt;a href=&quot;#xml&quot; class=&quot;headerlink&quot; title=&quot;xml&quot;&gt;&lt;/a&gt;xml&lt;/h1&gt;&lt;h2 id=&quot;data文件初始化中的知识点&quot;&gt;&lt;a href=&quot;#data文件初始化中的知识点&quot; class=&quot;headerlink&quot; title=&quot;data文件初始化中的知识点&quot;&gt;&lt;/a&gt;data文件初始化中的知识点&lt;/h2&gt;&lt;h3 id=&quot;1-结构&quot;&gt;&lt;a href=&quot;#1-结构&quot; class=&quot;headerlink&quot; title=&quot;1.结构&quot;&gt;&lt;/a&gt;1.结构&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;openerp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;record&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;filed&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;filed&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;record&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;data&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;openerp&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;属性篇&quot;&gt;&lt;a href=&quot;#属性篇&quot; class=&quot;headerlink&quot; title=&quot;属性篇&quot;&gt;&lt;/a&gt;属性篇&lt;/h2&gt;&lt;h3 id=&quot;attrs-公共属性&quot;&gt;&lt;a href=&quot;#attrs-公共属性&quot; class=&quot;headerlink&quot; title=&quot;attrs(公共属性)&quot;&gt;&lt;/a&gt;attrs(公共属性)&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Odoo-XML" scheme="https://yangtiancheng.github.io/bbs.github.io/tags/Odoo-XML/"/>
    
  </entry>
  
</feed>
